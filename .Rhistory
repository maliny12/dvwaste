sub_occurance <- aus_stations %>%
filter(latitude <= -14 & latitude >= -15 & longitude >= 132 & longitude <= 133)
# We will look at the the weather data from weather station `id: ASN00014932`
# We will filter the date based on the available data in `WILD_THING_chloebia_gouldiae`
# (From 1990-02-28- 2023-09-20)
narrogin <- aus_stations |>
filter(id == "ASN00014932") |>
rowwise() |>
mutate(ts = list(meteo_pull_monitors(
monitors = id, var = c("PRCP", "TMAX", "TMIN"),
date_min = "1990-02-28",
date_max = "2023-09-20 ") |>
select(-id))) |>
rename(lat = latitude, long = longitude, elev = elevation) |> select(id, long, lat, elev, name, wmo_id, ts) %>%
unnest(ts) |>
mutate(tmax = tmax/10, tmin = tmin/ 10) %>%
rename("eventDate" = "date") %>%
na.omit(eventDate)
# Merge the weather data with WILD_THING_chloebia_gouldiae data
# With the help of Stackoverflow and CHATGPT, we are able to obtain the 2km radius between the weather station
# We first need to create a dataframe containing the geometry of all wild sighting
geometry <- data.frame("decimalLongitude" = WILD_THING_chloebia_gouldiae$decimalLongitude,
"decimalLatitude"= WILD_THING_chloebia_gouldiae$decimalLatitude)
coord_weather_station <- c(132.3826,-14.5229)
# Dataset that contains all coordiate of the Wild sighting a variable (within_20km)
# @parem: within_20km:  contain boolean values that indicate weather the coordinate
#                       is within 20 km radius of the weather station.
coord_df <- data.frame(geometry,
within_20km = geosphere::distHaversine(
geometry, # coordinate of all wild sightings
coord_weather_station # coordinate of weather station
) / 1000 <= 20)    # convert m to km, check <= 20 km
# This dataset contains all wild sighting within the radius of 20km
# from the Weather Station (ASN00014932)
# `within_radius` is created by merging `WILD_THING_chloebia_gouldiae` with
# `coord_df`
within_radius <- cbind(WILD_THING_chloebia_gouldiae, coord_df$within_20km) %>%
filter(coord_df$within_20km == TRUE) %>%
mutate(eventDate = as.Date(eventDate)) %>%
group_by(eventDate) %>%
summarise(daily_sighting = n()) %>%
mutate(eventDate = as.Date(eventDate))
# Merge Weather data with within_radius data
merged_weather_sighting <- left_join(narrogin, within_radius,
by = "eventDate")
# Create a final data.frame called `weather_sighting`
weather_sighting <- merged_weather_sighting %>%
mutate(sighting = case_when(is.na(daily_sighting) ~ 0,
!is.na(daily_sighting) ~1))
# Save `weather_sighting` as a rda file in DATA folder
save(weather_sighting, file = "data/weather_sighting.rda")
# Summarize the total sightings by data resource
# Sort by total sightings in descending order
sighting_counts <- WILD_THING_chloebia_gouldiae %>%
group_by(dataResourceName) %>%
summarise(total_sightings = n()) %>%
arrange(desc(total_sightings))
# Select the top five data resources
top_five_sightings <- head(sighting_counts, 5)
# Create a bar chart
# Fill with Macaron Blue color
ggplot(top_five_sightings, aes(x = reorder(dataResourceName, -total_sightings), y = total_sightings)) +
geom_bar(stat = "identity", fill = "#87CEEB") +
theme(axis.text.x = element_text( hjust = 1)) +
labs(
title = "Top Five Data Resources with Gouldiae Sightings",
x = "Data Resource",
y = "Total Sightings"
) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
hourly_counts <- WILD_THING_chloebia_gouldiae %>%
mutate(time = substr(time, 1, 2),
time = factor(time, levels = sprintf("%02d", 0:23))) %>%
filter(time != "00") %>%
count(time)
hourly_plot <- ggplot(hourly_counts, aes(x = time, y = n)) +
geom_bar(stat = "identity", fill = "#87CEEB") +
labs(title = "Hourly Observation Counts", x = "Time Period (Hour)", y = "Observation Counts") +
theme_minimal() +
scale_x_discrete(breaks = sprintf("%02d", 1:23))
print(hourly_plot)
average_10_years <- WILD_THING_chloebia_gouldiae %>%
group_by(month, year) %>%
summarise(month_sighting = n()) %>%
ungroup() %>%
mutate( years_bin = as.numeric(cut(year,
breaks = c(1989,1999,2009,
2019,2023)))) %>%
group_by(years_bin,month) %>%
summarise(monthly_sighting = mean(month_sighting))
p1 <- average_10_years %>%
group_by(years_bin, ) %>%
ggplot() +
geom_line(aes(x = month, y = monthly_sighting,
color = factor(years_bin))) +
scale_x_continuous(breaks = 1:12, labels = month.abb, minor_breaks = NULL) +
labs(title = "10 years average montly wild Gouldiae sighting, from 1990 to 2023", colour = "Period") +
scale_color_manual(labels = c("90s (1990 to 1999)", "00s (2000 to 2009)",
"10s (2010 to 2019)", "Present (2020 - 2023)"),
values = c("#f3452c","#FA6DFA","#ffc50f","#8c9f0f")) +
theme_classic()
p1
historical_sighting <- WILD_THING_chloebia_gouldiae %>%
group_by(month, year) %>% # get the total Gouldiae Sighting, based on year
summarise(monthly_sighting = n())
ggplot(historical_sighting,
aes(x = fct_reorder(as.factor(month), monthly_sighting, na.rm = TRUE),
y = monthly_sighting)) +
geom_boxplot()+
xlab("Month") +
ylab("Monthly sighting") +
ggtitle("Boxplot of wild Gouldiae sighting on the montly basis.") +
scale_y_log10()+
coord_flip() +
theme_classic()
set.seed(123456789)
ggplot(lineup(null_permute("month"), historical_sighting),
aes(x = as.factor(month),
y = monthly_sighting)) +
geom_boxplot() +
facet_wrap(~.sample) +
scale_y_log10()+
coord_flip() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
# Find P-vlaue
pvisual(8,8,20)
#Read in the SA2 shapefile downloaded from the ABS
# Filter for Queensland, Western Australia and Northern Territory
AUS_SA2_shp <- read_sf("sf_data/1270055001_sa2_2016_aust_shape/SA2_2016_AUST.shp") %>%
filter(STE_CODE16 %in% c("3", "5", "7"))
season <- WILD_THING_chloebia_gouldiae %>%
mutate( season = case_when(month %in% c(9,10,11) ~ "spring",
month %in% c(12,1,2) ~ "summer",
month %in% c(3,4,5) ~ "autumn",
month %in% c(6,7,8) ~ "winter"))
# Plot all sighting
ggplot() +
geom_sf(data=AUS_SA2_shp) +
geom_point(data = season, aes(x = decimalLongitude,
y = decimalLatitude,
color = season)) +
coord_sf(ylim = c(-25, -9)) +
facet_wrap(~ season) +
ggtitle("Distribution of wild Gouldiae sighting, based on season.") +
theme_classic()
set.seed(123456789)
ggplot(lineup(null_permute("season"), season),
aes( x = decimalLongitude,
y = decimalLatitude,
color = season)) +
geom_point() +
facet_wrap(~.sample) +
coord_sf(ylim = c(-25, -9)) +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank())
# Find P-vlaue
pvisual(1,8,20)
load("data/weather_sighting.rda")
precipitation_0 <- weather_sighting %>%
filter(prcp == 0) %>%
filter(sighting == 1) %>%
nrow()
precipitation_value <- weather_sighting %>%
filter(prcp > 0) %>%
filter(sighting == 1) %>%
nrow()
data <- data.frame(
Precipitation = c("Zero Precipitation", "Non-Zero Precipitation"),
BirdSightings = c(precipitation_0, precipitation_value)
)
p <- ggplot(data, aes(x = Precipitation, y = BirdSightings, fill = Precipitation)) +
geom_bar(stat = "identity", width = 0.5) +
labs(
x = "Precipitation",
y = "Number of Bird Sightings"
) +
scale_fill_manual(values = c("Zero Precipitation" = "blue", "Non-Zero Precipitation" = "red")) +
theme_minimal() +
ggtitle("Bird Sightings vs. Precipitation") +
geom_text(aes(label = BirdSightings), vjust = -0.2)
print(p)
year_weather <- weather_sighting %>%
mutate(eventDate = as.POSIXct(eventDate),
year = year(eventDate)) %>%
filter(sighting == 1)
year_weather %>%
ggplot(aes(x = year, y = tmax)) +
stat_summary(fun = "mean", geom = "point") +
geom_smooth(colour = "red", se = FALSE) +
labs(
x = "Year",
y = "Maximum in Temperature",
color = "Year"
)
temperature_average <- weather_sighting %>%
mutate(pre_sight = ifelse(sighting == 1 , "sighting", "non-sighting")) %>%
mutate(temp=tmax-tmin) %>%
ggplot(aes(x=pre_sight, y=temp)) +
geom_lv(aes(fill=after_stat(LV))) +
labs(
y = "Temperature (째C)",
x = "Time Period"
) +
scale_fill_discrete_divergingx(palette = "Fall")
??geom_lv
library(lvplot)
install.packages("lvplot")
library(lvplot)
temperature_average <- weather_sighting %>%
mutate(pre_sight = ifelse(sighting == 1 , "sighting", "non-sighting")) %>%
mutate(temp=tmax-tmin) %>%
ggplot(aes(x=pre_sight, y=temp)) +
geom_lv(aes(fill=after_stat(LV))) +
labs(
y = "Temperature (째C)",
x = "Time Period"
) +
scale_fill_discrete_divergingx(palette = "Fall")
library(colorspace)
library(rnoaa)
temperature_average <- weather_sighting %>%
mutate(pre_sight = ifelse(sighting == 1 , "sighting", "non-sighting")) %>%
mutate(temp=tmax-tmin) %>%
ggplot(aes(x=pre_sight, y=temp)) +
geom_lv(aes(fill=after_stat(LV))) +
labs(
y = "Temperature (째C)",
x = "Time Period"
) +
scale_fill_discrete_divergingx(palette = "Fall")
temperature_min
temperature_average <- weather_sighting %>%
mutate(pre_sight = ifelse(sighting == 1 , "sighting", "non-sighting")) %>%
mutate(temp=tmax-tmin) %>%
ggplot(aes(x=pre_sight, y=temp)) +
geom_lv(aes(fill=after_stat(LV))) +
labs(
y = "Temperature (째C)",
x = "Time Period"
) +
scale_fill_discrete_divergingx(palette = "Fall")
temperature_average
average_weather <- weather_sighting %>%
mutate(temp = (tmax + tmin)/2)
bird_weather <- average_weather %>%
filter(sighting == 1)
non_bird_weather <- average_weather %>%
filter(sighting == 0)
temperature_p_value <- t.test(bird_weather$temp, non_bird_weather$temp)$p.value
precipitation_p_value <- t.test(bird_weather$prcp, non_bird_weather$prcp)$p.value
cat("tem (p-value):", temperature_p_value, "\n")
cat("prcp (p-value):", precipitation_p_value, "\n")
citation(galah)
citation("galah")
hourly_counts <- WILD_THING_chloebia_gouldiae %>%
mutate(time = substr(time, 1, 2),
time = factor(time, levels = sprintf("%02d", 0:23))) %>%
filter(time != "00") %>%
count(time)
hourly_plot <- ggplot(hourly_counts, aes(x = time, y = n)) +
geom_bar(stat = "identity", fill = "#87CEEB") +
labs(title = "Hourly Observation Counts", x = "Time Period (Hour)", y = "Observation Counts") +
theme_minimal() +
scale_x_discrete(breaks = sprintf("%02d", 1:23)) +
theme_classic()
print(hourly_plot)
# Summarize the total sightings by data resource
# Sort by total sightings in descending order
sighting_counts <- WILD_THING_chloebia_gouldiae %>%
group_by(dataResourceName) %>%
summarise(total_sightings = n()) %>%
arrange(desc(total_sightings))
# Select the top five data resources
top_five_sightings <- head(sighting_counts, 5)
# Create a bar chart
# Fill with Macaron Blue color
ggplot(top_five_sightings, aes(x = reorder(dataResourceName, -total_sightings), y = total_sightings)) +
geom_bar(stat = "identity", fill = "#87CEEB") +
theme(axis.text.x = element_text( hjust = 1)) +
labs(
title = "Top Five Data Resources with Gouldiae Sightings",
x = "Data Resource",
y = "Total Sightings"
) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
theme_classic()
chloebia_basic
chloebia_basic <- galah_call() |>
galah_identify("Chloebia gouldiae") |>
galah_select(group = "basic") |>
atlas_occurrences()
load("raw_data/chloebia_basic.csv")
chloebia_basic <- read_csv("raw_data/chloebia_basic.csv")
str(chloebia_basic)
glimpse(chloebia_basic)
chloebia_basic %>%
tidy()
chloebia_basic
glimpse(chloebia_basic)
chloebia_basic
chloebia_basic <- read_csv("raw_data/chloebia_basic.csv")
chloebia_basic_descriptions <- data.frame(
Variable = c("decimalLatitude", "decimalLongitude", "eventDate", "scientificName", "taxonConceptID", "recordID",
"dataResourceName", "occurrenceStatus"),
Description = c(
"Latitude of the sighting.",
"Longitude of the sighting.",
"Date and time of the sighting.",
"Scientific name of the bird." ,
"Source of the sighting",
"Unique ID for the record.",
"Name of the data provider.",
"Occurance status of the record."
)
)
chloebia_basic_descriptions
chloebia_event <- read_csv("raw_data/chloebia_event.csv")
glimpse(chloebia_event)
chloebia_event$samplingEffort
chloebia_event_descriptions <- data.frame(
Variable = c("eventRemarks", "eventTime", "eventID", "eventDate", "samplingEffort", "samplingProtocol"),
Description = c(
"Special remark for the specific sighting.",
"Time of the sighting.",
"Unique ID for the record.",
"Date of the sighting." ,
"Sampling Effort",
"Sampling Protocal"
)
)
# Description for chloebia_event
chloebia_event_descriptions
chloebia_assert <- read_csv("raw_data/chloebia_assert.csv")
glimpse(chloebia_assert)
glimpse(chloebia_basic)
glimpse(chloebia_event)
glimpse(chloebia_basic)
glimpse(chloebia_event)
bar_chart <- ggplot(top_five_sightings,
aes(x = reorder(dataResourceName, -total_sightings),
y = total_sightings)) +
geom_bar(stat = "identity", fill = "#87CEEB") +
theme(axis.text.x = element_text( hjust = 1)) +
labs(
title = "Top Five Data Resources with Gouldiae Sightings",
x = "Data Resource",
y = "Total Sightings"
) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
theme_classic()
plotly(bar_chart)
ggplotly(bar_chart)
bar_chart <- ggplot(top_five_sightings,
aes(x = reorder(dataResourceName, -total_sightings),
y = total_sightings)) +
geom_bar(stat = "identity", fill = "#87CEEB") +
theme(axis.text.x = element_text( hjust = 1)) +
labs(
title = "Top Five Data Resources with Gouldiae Sightings",
x = "Data Resource",
y = "Total Sightings"
) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
theme_classic()
ggplotly(bar_chart)
hourly_plot <- ggplot(hourly_counts, aes(x = time, y = n)) +
geom_bar(stat = "identity", fill = "#87CEEB") +
labs(title = "Hourly Observation Counts", x = "Time Period (Hour)", y = "Observation Counts") +
theme_minimal() +
scale_x_discrete(breaks = sprintf("%02d", 1:23)) +
theme_classic()
ggplotly(hourly_plot)
ggplotly(p1)
ggplotly(p1)  +
scale_color_manual(labels = c("90s (1990 to 1999)", "00s (2000 to 2009)",
"10s (2010 to 2019)", "Present (2020 - 2023)"),
values = c("#f3452c","#FA6DFA","#ffc50f","#8c9f0f"))
p1 <- average_10_years %>%
group_by(years_bin, ) %>%
ggplot() +
geom_line(aes(x = month, y = monthly_sighting,
color = factor(years_bin))) +
scale_x_continuous(breaks = 1:12, labels = month.abb, minor_breaks = NULL) +
labs(title = "10 years average montly wild Gouldiae sighting, from 1990 to 2023", colour = "Period") +
scale_color_manual(labels = c("90s (1990 to 1999)", "00s (2000 to 2009)",
"10s (2010 to 2019)", "Present (2020 - 2023)"),
values = c("#f3452c","#FA6DFA","#ffc50f","#8c9f0f")) +
theme_classic()
p1
ggplot(historical_sighting,
aes(x = fct_reorder(as.factor(month), monthly_sighting, na.rm = TRUE),
y = monthly_sighting)) +
geom_boxplot()+
xlab("Month") +
ylab("Monthly sighting") +
ggtitle("Boxplot of wild Gouldiae sighting on the montly basis.") +
scale_y_log10()+
coord_flip() +
theme_classic()
ggplotly(p2)
p2 <- ggplot(historical_sighting,
aes(x = fct_reorder(as.factor(month), monthly_sighting, na.rm = TRUE),
y = monthly_sighting)) +
geom_boxplot()+
xlab("Month") +
ylab("Monthly sighting") +
ggtitle("Boxplot of wild Gouldiae sighting on the montly basis.") +
scale_y_log10()+
coord_flip() +
theme_classic()
ggplotly(p2)
p <- ggplot(data, aes(x = Precipitation, y = BirdSightings, fill = Precipitation)) +
geom_bar(stat = "identity", width = 0.5) +
labs(
x = "Precipitation",
y = "Number of Bird Sightings"
) +
scale_fill_manual(values = c("Zero Precipitation" = "skyblue", "Non-Zero Precipitation" = "firebrick")) +
theme_minimal() +
ggtitle("Bird Sightings vs. Precipitation") +
geom_text(aes(label = BirdSightings), vjust = -0.2) +
theme_classic()
ggplotly(p)
ggplotly(weather)
weather <- year_weather %>%
ggplot(aes(x = year, y = tmax)) +
stat_summary(fun = "mean", geom = "point") +
geom_smooth(colour = "red", se = FALSE) +
labs(
x = "Year",
y = "Maximum in Temperature",
color = "Year"
) +
theme_classic()
ggplotly(weather)
ggplotly(temperature_average)
temperature_average <- weather_sighting %>%
mutate(pre_sight = ifelse(sighting == 1 , "sighting", "non-sighting")) %>%
mutate(temp=tmax-tmin) %>%
ggplot(aes(x=pre_sight, y=temp)) +
geom_lv(aes(fill=after_stat(LV))) +
labs(
y = "Temperature (째C)",
x = "Time Period"
) +
scale_fill_discrete_divergingx(palette = "Fall") +
theme_classic()
ggplotly(temperature_average)
temperature_average
sighting <- ggplot() +
geom_sf(data=AUS_SA2_shp) +
geom_point(data = season, aes(x = decimalLongitude,
y = decimalLatitude,
color = season)) +
coord_sf(ylim = c(-25, -9)) +
facet_wrap(~ season) +
ggtitle("Distribution of wild Gouldiae sighting, based on season.") +
theme_classic()
ggplotly(sighting)
sighting <- ggplot() +
geom_sf(data=AUS_SA2_shp) +
geom_point(data = season, aes(x = decimalLongitude,
y = decimalLatitude,
color = season)) +
coord_sf(ylim = c(-25, -9)) +
facet_wrap(~ season) +
ggtitle("Distribution of wild Gouldiae sighting, based on season.") +
theme_classic()
sighting
bar_chart <- ggplot(top_five_sightings,
aes(x = reorder(dataResourceName, -total_sightings),
y = total_sightings,
text = paste("Data Resource",dataResourceName, "<br>",
"Total Sightings", total_sightings))) +
geom_bar(stat = "identity", fill = "#87CEEB") +
theme(axis.text.x = element_text( hjust = 1)) +
labs(
title = "Top Five Data Resources with Gouldiae Sightings",
x = "Data Resource",
y = "Total Sightings"
) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
theme_classic()
ggplotly(bar_chart)
bar_chart <- ggplot(top_five_sightings,
aes(x = reorder(dataResourceName, -total_sightings),
y = total_sightings,
text = paste("Data Resource: ",dataResourceName, "<br>",
"Total Sightings: ", total_sightings))) +
geom_bar(stat = "identity", fill = "#87CEEB") +
theme(axis.text.x = element_text( hjust = 1)) +
labs(
title = "Top Five Data Resources with Gouldiae Sightings",
x = "Data Resource",
y = "Total Sightings"
) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
theme_classic()
ggplotly(bar_chart, tooltip = "text")
kable(chloebia_basic_descriptions, format = "markdown")
kableExtra::kable(chloebia_basic_descriptions, format = "markdown")
kableExtra::kable(chloebia_assert_descriptions, format = "markdown")
chloebia_assert_descriptions <- data.frame(
Variable = c("BASIS_OF_RECORD_INVALID"),
Description = c(
"Contain information on the status of the record."
)
)
kableExtra::kable(chloebia_assert_descriptions, format = "markdown")
